{"version":3,"sources":["component/companyInfo.jsx","component/companyCard.jsx","App.js","serviceWorker.js","index.js","images/background.jpeg"],"names":["CompanyInfo","url","process","user","password","query","Component","CompanyCard","props","console","log","name","state","score","companyInfo","_id","revenue","profit","assets","market_value","employees","positive_tweets","negative_tweets","neutral_tweets","getCompany","responseText","json","JSON","parse","setState","callback","data","stringify","this","xhr","XMLHttpRequest","addEventListener","readyState","open","setRequestHeader","send","description","dataPie","labels","datasets","backgroundColor","hoverBackgroundColor","Query","Row","md","Col","sm","className","Card","body","style","paddingLeft","CardText","height","marginTop","paddingRight","Table","striped","bordered","hover","size","id","options","responsive","App","value","companyName","handleUserInput","bind","handleSubmit","event","preventDefault","target","imageUrl","background","Jumbotron","href","Navbar","expand","width","Nav","NavItem","NavLink","marginLeft","Form","onSubmit","Input","type","placeholder","onChange","backgroundImage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4532038c.chunk.js","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport { Neo4jGraphRenderer } from 'neo4j-graph-renderer';\n  {/*File for graph retrieval and general database connection*/}\n  class CompanyInfo extends Component {\n    render() {\n      let visual = <Neo4jGraphRenderer url={process.env.REACT_APP_NEO4J_URI} user={process.env.REACT_APP_NEO4J_USER}\n        password={process.env.REACT_APP_NEO4J_PASSWORD} \n        query=\"match (c1:Company)<-[r1:IS_SUPPLIER_FOR]-(n:Supplier)-[r2:IS_SUPPLIER_FOR]->(c2:Company) return n,r1,c1,r2,c2\"/>; \n      return (\n        visual\n      );\n  } \n}  \n\nexport default CompanyInfo;\n","import React, {\n  Component\n} from 'react';\nimport { Card, CardText, Row, Col, Table } from 'reactstrap';\nimport { Neo4jGraphRenderer } from 'neo4j-graph-renderer';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nclass CompanyCard extends Component {\n\tconstructor(props) {\n    \tsuper(props);\n    \tconsole.log(this.props.name);\n    \t\tthis.state = {\n\t\tscore: 60,\n\t\tcompanyInfo: {\n    _id: \"5dbe989bcd94ac4b4ff5b5c4\",\n    name: \"Apple\",\n    revenue:100,\n    profit: 100,\n    assets: 100,\n    market_value:1000,\n    employees: 2000,\n    positive_tweets: 33,\n    negative_tweets: 33,\n    neutral_tweets: 33\n}  \n  \t}\n    \tthis.getCompany((responseText) => {\n    \t\tvar json = JSON.parse(responseText);\n\t\tthis.setState({\n\t\t\tcompanyInfo: json\n\t\t});\n\t});\n\t}\n\n\n\n\tgetCompany(callback){\n\t\tvar data = JSON.stringify({\n\t\t\t\"name\": this.props.name\n\t\t  });\n\n\t\t  console.log(data);\n\n\t\t  var xhr = new XMLHttpRequest();\n\t\t  //xhr.withCredentials = true;\n\t\t  // const companyInfo = {};\n\t\t  xhr.callback = callback;\n\t\t  xhr.addEventListener(\"readystatechange\", function () {\n\t\t\tif (this.readyState === 4) {\n\t\t\t  let companyInfo = this.responseText;\n\t\t\t  console.log(companyInfo);\n\t\t\t  callback(this.responseText);\n\t\t\t}\n\t\t  });\n\t\t  \n\t\t  xhr.open(\"POST\", \"http://localhost:3001/company\");\n\t\t  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\t\t  xhr.setRequestHeader(\"Accept\", \"*/*\");\n\t\t  xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\t\t  xhr.setRequestHeader(\"cache-control\", \"no-cache\");\n\t\t  xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n\t\t  // xhr.timeout = 4000;\n\t\t  xhr.send(data);\n\t\t  // return xhr.responseText;\n\t\t  // console.log(xhr.response.body);\n\t}\n\n\trender() {\n\n\t\t// this.setState({\n\t\t//   \tcompanyInfo: this.getCompany()\n\t\t//   });\n\t\tconst dataPie = {\n\t      labels: [\"Positive\", \"Negative\", \"Neutral\"],\n\t      datasets: [\n\t        {\n\t          data: [this.state.companyInfo.positive_tweets, \n\t          this.state.companyInfo.negative_tweets, \n\t          this.state.companyInfo.neutral_tweets],\n\t          backgroundColor: [\n\t            \"#F7464A\",\n\t            \"#46BFBD\",\n\t            \"#FDB45C\"\n\t          ],\n\t          hoverBackgroundColor: [\n\t            \"#FF5A5E\",\n\t            \"#5AD3D1\",\n\t            \"#FFC870\"\n\t          ]\n\t        }\n\t      ]\n\t    };\n\n\t\tconst Query = \"match (c:Company)<-[r:IS_SUPPLIER_FOR]-(n:Supplier) where c.name = '\" + this.props.name + \"' return n,r,c limit 40\";\n\t\tlet description;\n\t\tif (this.state.score >= 80) {\n\t\t\tdescription = this.props.name+\" Inc. is a company that shows a high score on the overall evaluation of \" + \n\t\t\t\t\t\"environmental influences, social impacts, and governance. We highly recommend investing on this company.\"\n\t\t} else {\n\t\t\tif (this.state.score > 60 && this.state.score < 80) {\n\t\t\t\tdescription = this.props.name+\" Inc. is a company that shows a mediocre score on the overall evaluation of \" +\n\t\t\t\t\t\t\t\t\t\"environmental influences, social impacts, and governance. We would not say investing this company is a good idea but we \" + \n\t\t\t\t\t\t\t\t\t\"are also not against it.\"\n\t\t\t} else {\n\t\t\t\tdescription = this.props.name+\" Inc. is a company that shows a low score on the overall evaluation of \" +\n\t\t\t\t\t\t\t\t\t\"environmental influences, social impacts, and governance. We do not recommend investing in this company.\"\n\t\t\t}\n\t\t}\n\t\t// console.log(\"render\");\n\t\t// console.log(this.state.companyInfo);\n\t\t// console.log(this.state.companyInfo.revenue);\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Row md=\"6\">\n\t\t\t\t<Col sm=\"7\" className=\"text-center\"> \n\t\t\t\t\t<h1>{this.props.name}</h1>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"5\" className=\"text-center\">\n\t\t\t\t\t<h1>Score: {this.state.score}</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row md=\"6\"> \n\t\t\t\t<Col md=\"7\"> \n\t\t\t\t\t<Row md=\"2\">\n\t\t\t\t\t\t<Card body className=\"text-left\" style={{backgroundColor: '#f5f5f5', paddingLeft: \"3rem\"}}> \n\t\t\t\t\t\t\t<CardText> \n\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t</CardText>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"6\">\n\t\t\t\t\t\t<Card body style={{height: '45rem', backgroundColor: '#f5f5f5', paddingLeft:\"3rem\" }}>\n\t\t\t\t\t\t\t<Neo4jGraphRenderer url={process.env.REACT_APP_NEO4J_URI} user={process.env.REACT_APP_NEO4J_USER}\n\t\t\t        password={process.env.REACT_APP_NEO4J_PASSWORD} \n\t\t\t        query={Query}/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"5\"> \n\t\t\t\t\t<Row md=\"12\">\n\t\t\t\t\t\t<Card body style={{ marginTop: '0%', height: '24rem',backgroundColor: '#f5f5f5',paddingRight:\"3rem\" }}>\n\t\t\t\t            <h2>Financial Data</h2>\n\t\t\t\t            <Table striped bordered hover size=\"sm\">\n\t\t\t\t\t\t\t  <thead>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <th>Properties</th>\n\t\t\t\t\t\t\t      <th>Amount</th>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t  </thead>\n\t\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>Revenues($M)</td>\n\t\t\t\t\t\t\t      <td id=\"revenue\">{this.state.companyInfo.revenue}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>Profits($M)</td>\n\t\t\t\t\t\t\t      <td id=\"profit\">{this.state.companyInfo.profit}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>Assets($M)</td>\n\t\t\t\t\t\t\t      <td id=\"assets\">{this.state.companyInfo.assets}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t    \t<td>Market Value($M)</td>\n\t\t\t\t\t\t\t    \t<td id=\"market_value\">{this.state.companyInfo.market_value}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t    \t<td>Employees</td>\n\t\t\t\t\t\t\t    \t<td id=\"employees\">{this.state.companyInfo.employees}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t        </Card>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"12\">\n\t\t\t\t\t\t<Card body style={{height: '27rem', backgroundColor: '#f5f5f5'}}>\n\t\t\t\t          <MDBContainer id=\"pie\">\n\t\t\t\t\t        <h2 className=\"mt-2\">Public Sentiment</h2>\n\t\t\t\t\t        <Pie data={dataPie} options={{ responsive: true }}/>\n\t\t\t\t\t      </MDBContainer>\n\t\t\t\t        </Card>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n\n\n\n}\n\nexport default CompanyCard;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CompanyInfo from \"./component/companyInfo\";\nimport CompanyCard from \"./component/companyCard\";\nimport { Jumbotron, Input, Form, Navbar, NavItem, NavLink, NavbarBrand, NavbarToggler, Nav} from 'reactstrap';\nimport background from \"./images/background.jpeg\";\n\nclass App extends Component{\n    constructor(props) {\n    super(props);\n    this.state = {value: '', companyName:''}\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleUserInput(event) {\n    {/*User Input for company query*/}\n    event.preventDefault();\n    this.setState({\n      value: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    {/*Server side query term*/}\n    event.preventDefault();\n    this.setState({\n      companyName: this.state.value\n    });\n    \n  }\n  \n  render() {\n      const imageUrl = background;\n      return (\n        <div id = 'root' >\n      <header>\n      <div>\n      <Jumbotron>\n        {/*This is the large header at the top of the all pages*/} \n        <h1 className=\"display-3\">Moral Investment</h1>\n        <p className=\"lead\">Invest in companies with a healthy supply chain. Learn more <a href=\"https://github.com/AlanFermat/HackTX2019\">here</a>. </p>\n        <hr className=\"my-2\" />\n        <p>HackTX 2019</p>\n        <div className=\"lead\">\n        <Navbar expand=\"md col-4\" style={{backgroundColor:'#d3d3d3', width:\"35rem\"}}>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"/component/\">Home</NavLink>\n            </NavItem>\n            <NavItem style={{marginLeft:'5rem'}}>\n              <NavLink href=\"#\">Labor Info</NavLink>\n            </NavItem>\n            <NavItem style={{marginLeft:'5rem'}}>\n              <NavLink href=\"https://github.com/AlanFermat/HackTX2019\">Support</NavLink>\n            </NavItem>\n          </Nav>\n      </Navbar>\n        <Form className = \"btn \" onSubmit = {this.handleSubmit} style={{marginLeft:'70rem'}}>\n            <Input style={{paddingRight:'10rem'}} type = \"text\" value = {this.state.value} placeholder = \"Enter a Company here\" onChange = {this.handleUserInput} /> \n        </Form>\n        </div>\n      </Jumbotron>\n    </div>\n      </header> \n      <div style={{backgroundImage: `url(${imageUrl})`}}>\n      { this.state.companyName === '' \n        ? <CompanyInfo/> \n        : <CompanyCard name={this.state.companyName}/>\n      }\n      </div>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.b54b7764.jpeg\";"],"sourceRoot":""}