{"version":3,"sources":["component/companyInfo.jsx","component/companyCard.jsx","App.js","serviceWorker.js","index.js"],"names":["CompanyInfo","url","process","user","password","query","Component","CompanyCard","props","state","score","dataPie","labels","datasets","data","backgroundColor","hoverBackgroundColor","console","log","name","description","Query","this","Row","md","Col","sm","className","Card","body","style","paddingLeft","CardText","height","marginTop","paddingRight","Table","striped","bordered","hover","size","colSpan","options","responsive","App","value","companyName","handleUserInput","bind","handleSubmit","event","preventDefault","setState","target","id","Jumbotron","href","Form","onSubmit","Input","type","placeholder","onChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kSAeeA,E,iLANT,OAHa,kBAAC,qBAAD,CAAoBC,IAAKC,4BAAiCC,KAAMD,OAC3EE,SAAUF,aACVG,MAAM,sH,GAJcC,a,6DCmIbC,G,mBA7Hd,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAIVC,MAAQ,CACPC,MAAO,GACJC,QAAS,CACPC,OAAQ,CAAC,MAAO,QAAS,SAAU,OAAQ,aAC3CC,SAAU,CACR,CACEC,KAAM,CAAC,IAAK,GAAI,IAAK,GAAI,KACzBC,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,WAEFC,qBAAsB,CACpB,UACA,UACA,UACA,UACA,UACA,eAxBRC,QAAQC,IAAI,EAAKV,MAAMW,MAFR,E,sEAiClB,IACIC,EADEC,EAAQ,uEAAyEC,KAAKd,MAAMW,KAAO,0BAezG,OAZCC,EADGE,KAAKb,MAAMC,OAAS,GACTY,KAAKd,MAAMW,KAAK,mLAG1BG,KAAKb,MAAMC,MAAQ,IAAMY,KAAKb,MAAMC,MAAQ,GACjCY,KAAKd,MAAMW,KAAK,+NAIhBG,KAAKd,MAAMW,KAAK,kLAK/B,6BACA,kBAACI,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAU,eACrB,4BAAKL,KAAKd,MAAMW,OAEjB,kBAACM,EAAA,EAAD,CAAKD,GAAG,IAAIG,UAAU,eACrB,sCAAYL,KAAKb,MAAMC,SAGzB,kBAACa,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACP,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACI,EAAA,EAAD,CAAMC,MAAI,EAACF,UAAU,YAAYG,MAAO,CAACf,gBAAiB,UAAWgB,YAAa,SACjF,kBAACC,EAAA,EAAD,KACEZ,KAIJ,kBAACG,EAAA,EAAD,CAAKC,GAAG,KACP,kBAACI,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACG,OAAQ,QAASlB,gBAAiB,UAAWgB,YAAY,SAC3E,kBAAC,qBAAD,CAAoB9B,IAAKC,4BAAiCC,KAAMD,OAC5DE,SAAUF,aACVG,MAAOgB,OAId,kBAACI,EAAA,EAAD,CAAKD,GAAG,KACP,kBAACD,EAAA,EAAD,CAAKC,GAAG,MACP,kBAACI,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAAEI,UAAW,KAAMD,OAAQ,QAAQlB,gBAAiB,UAAUoB,aAAa,SACnF,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAC1C,+BACE,4BACE,iCACA,0CACA,yCACA,0CAGJ,+BACE,4BACE,iCACA,oCACA,oCACA,qCAEF,4BACE,iCACA,qCACA,wCACA,qCAEF,4BACE,iCACA,wBAAIC,QAAQ,KAAZ,kBACA,6CAMR,kBAAClB,EAAA,EAAD,CAAKC,GAAG,MACP,kBAACI,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAO,CAACG,OAAQ,QAASlB,gBAAiB,YAC7C,kBAAC,IAAD,KACD,wBAAIY,UAAU,QAAd,aACA,kBAAC,IAAD,CAAKb,KAAMQ,KAAKb,MAAME,QAAS+B,QAAS,CAAEC,YAAY,e,GAlHzCrC,c,2BC+CXsC,E,YAjDX,WAAYpC,GAAQ,IAAD,8BACnB,4CAAMA,KACDC,MAAQ,CAACoC,MAAO,GAAIC,YAAY,IACrC,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJD,E,6EAMLE,GACdA,EAAMC,iBACN7B,KAAK8B,SAAS,CACZP,MAAOK,EAAMG,OAAOR,U,mCAGXK,GACXA,EAAMC,iBACN7B,KAAK8B,SAAS,CACZN,YAAaxB,KAAKb,MAAMoC,U,+BAMxB,OACE,yBAAKS,GAAK,QACZ,gCACA,6BACA,kBAACC,EAAA,EAAD,KACE,wBAAI5B,UAAU,aAAd,oBACA,uBAAGA,UAAU,QAAb,+DAAgF,uBAAG6B,KAAK,4CAAR,QAAhF,MACA,wBAAI7B,UAAU,SACd,0CACA,yBAAKA,UAAU,QACf,6BACA,kBAAC8B,EAAA,EAAD,CAAM9B,UAAY,mBAAmB+B,SAAYpC,KAAK2B,cAClD,kBAACU,EAAA,EAAD,CAAOC,KAAO,OAAOf,MAASvB,KAAKb,MAAMoC,MAAOgB,YAAc,uBAAuBC,SAAYxC,KAAKyB,uBAM/E,KAA3BzB,KAAKb,MAAMqC,YACT,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAa3B,KAAMG,KAAKb,MAAMqC,mB,GA1CtBxC,aCMEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.b21055a6.chunk.js","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport { Neo4jGraphRenderer } from 'neo4j-graph-renderer';\n  class CompanyInfo extends Component {\n    render() {\n      let visual = <Neo4jGraphRenderer url={process.env.REACT_APP_NEO4J_URI} user={process.env.REACT_APP_NEO4J_USER}\n        password={process.env.REACT_APP_NEO4J_PASSWORD} \n        query=\"match (c1:Company)<-[r1:IS_SUPPLIER_FOR]-(n:Supplier)-[r2:IS_SUPPLIER_FOR]->(c2:Company) return n,r1,c1,r2,c2\"/>; \n      return (\n        visual\n      );\n  } \n}  \n\nexport default CompanyInfo;\n","import React, {\n  Component\n} from 'react';\nimport { Card, CardText, Row, Col, Table } from 'reactstrap';\nimport { Neo4jGraphRenderer } from 'neo4j-graph-renderer';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport axios from \"axios\";\n\nclass CompanyCard extends Component {\n\tconstructor(props) {\n    \tsuper(props);\n    \tconsole.log(this.props.name);\n\t}\n\n\tstate = {\n\t\tscore: 60,\n\t    dataPie: {\n\t      labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n\t      datasets: [\n\t        {\n\t          data: [300, 50, 100, 40, 120],\n\t          backgroundColor: [\n\t            \"#F7464A\",\n\t            \"#46BFBD\",\n\t            \"#FDB45C\",\n\t            \"#949FB1\",\n\t            \"#4D5360\",\n\t            \"#AC64AD\"\n\t          ],\n\t          hoverBackgroundColor: [\n\t            \"#FF5A5E\",\n\t            \"#5AD3D1\",\n\t            \"#FFC870\",\n\t            \"#A8B3C5\",\n\t            \"#616774\",\n\t            \"#DA92DB\"\n\t          ]\n\t        }\n\t      ]\n\t    }\n  \t}\n\trender() {\n\t\tconst Query = \"match (c:Company)<-[r:IS_SUPPLIER_FOR]-(n:Supplier) where c.name = '\" + this.props.name + \"' return n,r,c limit 40\";\n\t\tlet description;\n\t\tif (this.state.score >= 80) {\n\t\t\tdescription = this.props.name+\" Inc. is a company that shows a high score on the overall evaluation of \" + \n\t\t\t\t\t\"environmental influences, social impacts, and governance. We highly recommend investing on this company.\"\n\t\t} else {\n\t\t\tif (this.state.score > 60 && this.state.score < 80) {\n\t\t\t\tdescription = this.props.name+\" Inc. is a company that shows a mediocre score on the overall evaluation of \" +\n\t\t\t\t\t\t\t\t\t\"environmental influences, social impacts, and governance. We would not say investing this company is a good idea but we \" + \n\t\t\t\t\t\t\t\t\t\"are also not against it.\"\n\t\t\t} else {\n\t\t\t\tdescription = this.props.name+\" Inc. is a company that shows a low score on the overall evaluation of \" +\n\t\t\t\t\t\t\t\t\t\"environmental influences, social impacts, and governance. We do not recommend investing on this company.\"\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Row md=\"6\">\n\t\t\t\t<Col sm=\"7\" className=\"text-center\"> \n\t\t\t\t\t<h1>{this.props.name}</h1>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"5\" className=\"text-center\">\n\t\t\t\t\t<h1>Score: {this.state.score}</h1>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row md=\"6\"> \n\t\t\t\t<Col md=\"7\"> \n\t\t\t\t\t<Row md=\"2\">\n\t\t\t\t\t\t<Card body className=\"text-left\" style={{backgroundColor: '#f5f5f5', paddingLeft: \"3rem\"}}> \n\t\t\t\t\t\t\t<CardText> \n\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t</CardText>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"6\">\n\t\t\t\t\t\t<Card body style={{height: '40rem', backgroundColor: '#f5f5f5', paddingLeft:\"3rem\" }}>\n\t\t\t\t\t\t\t<Neo4jGraphRenderer url={process.env.REACT_APP_NEO4J_URI} user={process.env.REACT_APP_NEO4J_USER}\n\t\t\t        password={process.env.REACT_APP_NEO4J_PASSWORD} \n\t\t\t        query={Query}/>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"5\"> \n\t\t\t\t\t<Row md=\"12\">\n\t\t\t\t\t\t<Card body style={{ marginTop: '0%', height: '20rem',backgroundColor: '#f5f5f5',paddingRight:\"3rem\" }}>\n\t\t\t\t            <Table striped bordered hover size=\"sm\">\n\t\t\t\t\t\t\t  <thead>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <th>#</th>\n\t\t\t\t\t\t\t      <th>First Name</th>\n\t\t\t\t\t\t\t      <th>Last Name</th>\n\t\t\t\t\t\t\t      <th>Username</th>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t  </thead>\n\t\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>1</td>\n\t\t\t\t\t\t\t      <td>Mark</td>\n\t\t\t\t\t\t\t      <td>Otto</td>\n\t\t\t\t\t\t\t      <td>@mdo</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>2</td>\n\t\t\t\t\t\t\t      <td>Jacob</td>\n\t\t\t\t\t\t\t      <td>Thornton</td>\n\t\t\t\t\t\t\t      <td>@fat</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t      <td>3</td>\n\t\t\t\t\t\t\t      <td colSpan=\"2\">Larry the Bird</td>\n\t\t\t\t\t\t\t      <td>@twitter</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t        </Card>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"12\">\n\t\t\t\t\t\t<Card body style={{height: '26rem', backgroundColor: '#f5f5f5'}}>\n\t\t\t\t          <MDBContainer>\n\t\t\t\t\t        <h3 className=\"mt-2\">Pie chart</h3>\n\t\t\t\t\t        <Pie data={this.state.dataPie} options={{ responsive: true }} />\n\t\t\t\t\t      </MDBContainer>\n\t\t\t\t        </Card>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t</div>\n\t\t\t\n\t\t);\n\t}\n}\n\nexport default CompanyCard;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CompanyInfo from \"./component/companyInfo\";\nimport CompanyCard from \"./component/companyCard\";\nimport { Jumbotron, Input, Form, } from 'reactstrap';\n\nclass App extends Component{\n    constructor(props) {\n    super(props);\n    this.state = {value: '', companyName:''}\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleUserInput(event) {\n    event.preventDefault();\n    this.setState({\n      value: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      companyName: this.state.value\n    });\n    \n  }\n  \n  render() {\n      return (\n        <div id = 'root' >\n      <header >\n      <div>\n      <Jumbotron>\n        <h1 className=\"display-3\">Moral Investment</h1>\n        <p className=\"lead\">Invest in companies with a healthy supply chain. Learn more <a href=\"https://github.com/AlanFermat/HackTX2019\">here</a>. </p>\n        <hr className=\"my-2\" />\n        <p>HackTX 2019</p>\n        <div className=\"lead\">\n        <br />\n        <Form className = \"btn  float-right\" onSubmit = {this.handleSubmit} >\n            <Input type = \"text\" value = {this.state.value} placeholder = \"Enter a Company here\" onChange = {this.handleUserInput} /> \n        </Form>\n      </div>\n      </Jumbotron>\n    </div>\n      </header> \n      { this.state.companyName === '' \n        ? <CompanyInfo /> \n        : <CompanyCard name={this.state.companyName}/>\n      }\n      \n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}